// Script para probar la conexi√≥n con Azure Blob Storage
require('dotenv').config();
const azureBlobService = require('./src/services/azureBlobService');

async function testAzureConnection() {
  console.log('üß™ Probando conexi√≥n con Azure Blob Storage...\n');
  
  // Verificar configuraci√≥n
  console.log('üìã Variables de entorno:');
  console.log('- AZURE_STORAGE_CONNECTION_STRING:', process.env.AZURE_STORAGE_CONNECTION_STRING ? '‚úÖ Configurado' : '‚ùå No configurado');
  console.log('- AZURE_STORAGE_CONTAINER_NAME:', process.env.AZURE_STORAGE_CONTAINER_NAME || 'No configurado');
  console.log('- AZURE_STORAGE_ACCOUNT_NAME:', process.env.AZURE_STORAGE_ACCOUNT_NAME || 'No configurado');
  console.log();

  // Verificar si Azure est√° configurado
  if (!azureBlobService.isAzureConfigured()) {
    console.log('‚ùå Azure no est√° configurado correctamente');
    console.log('‚ÑπÔ∏è Revisa las variables de entorno en el archivo .env');
    return;
  }

  try {
    // Inicializar Azure
    await azureBlobService.initialize();
    console.log('‚úÖ Azure Blob Storage inicializado correctamente');

    // Obtener estad√≠sticas del contenedor
    const stats = await azureBlobService.getContainerStats();
    console.log('üìä Estad√≠sticas del contenedor:');
    console.log(`- Nombre: ${stats.containerName}`);
    console.log(`- Archivos: ${stats.fileCount}`);
    console.log(`- Tama√±o total: ${stats.totalSizeMB} MB`);

    console.log('\nüéâ ¬°Azure Blob Storage est√° funcionando correctamente!');
    
  } catch (error) {
    console.error('‚ùå Error al conectar con Azure:', error.message);
    console.log('\nüí° Posibles soluciones:');
    console.log('1. Verifica que el Connection String sea correcto');
    console.log('2. Aseg√∫rate de que el contenedor existe');
    console.log('3. Verifica que el contenedor tenga acceso p√∫blico (nivel "Blob")');
  }
}

// Ejecutar prueba
testAzureConnection();
